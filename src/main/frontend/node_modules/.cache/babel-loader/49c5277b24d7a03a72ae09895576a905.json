{"ast":null,"code":"var _jsxFileName = \"/Users/gordonsu/Documents/Arcade-UI/src/main/frontend/src/Descriptions.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport StepContent from '@mui/material/StepContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  label: 'Fact Extraction',\n  description: `The fact extraction phase gathers facts about the system being investigated`\n}, {\n  label: 'Architectural Recovery',\n  description: `Based on the facts extracted about about a system, the architectural recovery\n                    phase creates a model of the architecture`\n}, {\n  label: 'Smell Detection',\n  description: `The smell detection phase detects issues, or \"smells\", in the model generated by\n                    the architectural recovery phase`\n}, {\n  label: 'Metrics',\n  description: `The metrics phase measures a variety of aspects of the architecture`\n}];\nexport default function Descriptions() {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      mx: \"auto\",\n      width: '30%',\n      textAlign: \"left\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n        active: true,\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: step.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: step.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, step.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Descriptions, \"cJXWosTT0XUh3gGn3cCcv/Y+Hws=\");\n\n_c = Descriptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Descriptions\");","map":{"version":3,"sources":["/Users/gordonsu/Documents/Arcade-UI/src/main/frontend/src/Descriptions.js"],"names":["React","Box","Stepper","Step","StepLabel","StepContent","Typography","steps","label","description","Descriptions","activeStep","setActiveStep","useState","handleNext","prevActiveStep","handleBack","handleReset","flexGrow","mx","width","textAlign","map","step","index"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,KAAK,EAAE,iBADX;AAEIC,EAAAA,WAAW,EAAG;AAFlB,CADU,EAKV;AACID,EAAAA,KAAK,EAAE,wBADX;AAEIC,EAAAA,WAAW,EAAG;AACtB;AAHI,CALU,EAUZ;AACMD,EAAAA,KAAK,EAAE,iBADb;AAEMC,EAAAA,WAAW,EAAG;AACtB;AAHE,CAVY,EAeZ;AACMD,EAAAA,KAAK,EAAE,SADb;AAEMC,EAAAA,WAAW,EAAG;AAFpB,CAfY,CAAd;AAqBA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAApC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAAEG,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBJ,IAAAA,aAAa,CAAEG,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBL,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEM,MAAAA,QAAQ,EAAE,CAAZ;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,KAAK,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAE;AAApD,KAAT;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEV,UAArB;AAAiC,MAAA,WAAW,EAAC,UAA7C;AAAA,gBACGJ,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,IAAD;AAAuB,QAAA,MAAM,EAAI,IAAjC;AAAA,gCACE,QAAC,SAAD;AAAA,oBACGD,IAAI,CAACf;AADR;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,WAAD;AAAA,iCACE,QAAC,UAAD;AAAA,sBAAae,IAAI,CAACd;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAWc,IAAI,CAACf,KAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/BuBE,Y;;KAAAA,Y","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport StepContent from '@mui/material/StepContent';\nimport Typography from '@mui/material/Typography';\n\nconst steps = [\n    {\n        label: 'Fact Extraction',\n        description: `The fact extraction phase gathers facts about the system being investigated`,\n    },    \n    {\n        label: 'Architectural Recovery',\n        description: `Based on the facts extracted about about a system, the architectural recovery\n                    phase creates a model of the architecture`,\n  },\n  {\n        label: 'Smell Detection',\n        description: `The smell detection phase detects issues, or \"smells\", in the model generated by\n                    the architectural recovery phase`,\n  },\n  {\n        label: 'Metrics',\n        description: `The metrics phase measures a variety of aspects of the architecture`,\n  },\n];\n\nexport default function Descriptions() {\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, mx: \"auto\", width: '30%', textAlign: \"left\"}}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((step, index) => (\n          <Step key={step.label} active = {true}>\n            <StepLabel>\n              {step.label}\n            </StepLabel>\n            <StepContent>\n              <Typography>{step.description}</Typography>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}