{"ast":null,"code":"var _jsxFileName = \"/Users/gordonsu/Documents/Arcade-UI/src/Pages/ArchRecovery.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArcadeBar from \"../ArcadeBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Upload Files', 'Choose Settings to Run', 'Results'];\nexport default function ArchRecovery() {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ArcadeBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      m: 2,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 750,\n          transform: 'translate(50%, 0)',\n          textAlign: 'center',\n          paddingTop: '15px',\n          paddingBottom: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          class: \"centeredTextBox\",\n          variant: \"body1\",\n          gutterBottom: true,\n          children: \"Recovery constructs architectural models from implementation level artifacts. The recovery tools integrated within ARCADE implement different strategies for clustering implementation-level entities into architectural elements, including dependency analysis, information retrieval, search-based strategies, machine learning, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        children: steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          if (isStepOptional(index)) {\n            labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this);\n          }\n\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n            children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            mb: 1\n          },\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'row',\n            pt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          display: \"block\",\n          gutterBottom: true,\n          children: \"Recovery Technique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"ACDC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), \" ACDC\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"ARC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), \" ARC\", /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          display: \"block\",\n          gutterBottom: true,\n          children: \"Input File Directory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Upload Directory\", /*#__PURE__*/_jsxDEV(\"input\", {\n            directory: \"\",\n            webkitdirectory: \"\",\n            type: \"file\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          display: \"block\",\n          gutterBottom: true,\n          children: \"Fact Extractor Files (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'row',\n            pt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            sx: {\n              mr: 1\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: handleSkip,\n            sx: {\n              mr: 1\n            },\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleNext,\n            children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArchRecovery, \"JuSWJLI0nqo1O5LgEQqaFwB8IYc=\");\n\n_c = ArchRecovery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArchRecovery\");","map":{"version":3,"sources":["/Users/gordonsu/Documents/Arcade-UI/src/Pages/ArchRecovery.js"],"names":["React","Box","Stepper","Step","StepLabel","Button","Typography","ArcadeBar","steps","ArchRecovery","activeStep","setActiveStep","useState","skipped","setSkipped","Set","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","width","transform","textAlign","paddingTop","paddingBottom","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ArcadeBar from \"../ArcadeBar\";\n\nconst steps = ['Upload Files', 'Choose Settings to Run', 'Results'];\n\nexport default function ArchRecovery() {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div>\n            <ArcadeBar/>\n        <Box m={2}>\n            <div\n                style={{\n                    width: 750,\n                    transform: 'translate(50%, 0)',\n                    textAlign: 'center',\n                    paddingTop: '15px',\n                    paddingBottom: '15px'\n                }}\n                >\n                    <Typography class=\"centeredTextBox\" variant=\"body1\" gutterBottom>\n                    Recovery constructs architectural models from implementation level artifacts. The recovery tools integrated within ARCADE implement different strategies for clustering implementation-level entities into architectural elements, including dependency analysis, information retrieval, search-based strategies, machine learning, etc. \n                    </Typography>\n            </div>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">Optional</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === steps.length ? (\n                <React.Fragment>\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        All steps completed - you&apos;re finished\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <Box sx={{ flex: '1 1 auto' }} />\n                        <Button onClick={handleReset}>Reset</Button>\n                    </Box>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Recovery Technique</Typography>\n                    <input type=\"radio\" value=\"ACDC\" /> ACDC\n                    <input type=\"radio\" value=\"ARC\" /> ARC\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Input File Directory</Typography>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >\n                        Upload Directory\n                        <input\n                            directory=\"\" webkitdirectory=\"\"\n                            type=\"file\"\n                            hidden\n                        />\n                    </Button>\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Fact Extractor Files (optional)</Typography>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >\n                        Upload File\n                        <input\n                            type=\"file\"\n                            hidden\n                            multiple\n                        />\n                    </Button>\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1 }}\n                        >\n                            Back\n                        </Button>\n                        <Box sx={{ flex: '1 1 auto' }} />\n                        {isStepOptional(activeStep) && (\n                            <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                Skip\n                            </Button>\n                        )}\n\n                        <Button onClick={handleNext}>\n                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n        </Box>\n</div>\n    );\n}"]},"metadata":{},"sourceType":"module"}