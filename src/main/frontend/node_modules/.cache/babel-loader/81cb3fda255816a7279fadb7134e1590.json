{"ast":null,"code":"import _classCallCheck from\"C:/Users/Lucas/Documents/Classes/Junior Year/Spring/Arcade-UI/src/main/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Lucas/Documents/Classes/Junior Year/Spring/Arcade-UI/src/main/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/Lucas/Documents/Classes/Junior Year/Spring/Arcade-UI/src/main/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/Lucas/Documents/Classes/Junior Year/Spring/Arcade-UI/src/main/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Lucas/Documents/Classes/Junior Year/Spring/Arcade-UI/src/main/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import UploadService from\"../services/upload-files.service\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UploadFiles=/*#__PURE__*/function(_Component){_inherits(UploadFiles,_Component);var _super=_createSuper(UploadFiles);function UploadFiles(props){var _this;_classCallCheck(this,UploadFiles);_this=_super.call(this,props);_this.selectFile=_this.selectFile.bind(_assertThisInitialized(_this));_this.upload=_this.upload.bind(_assertThisInitialized(_this));_this.state={selectedFiles:undefined,currentFile:undefined,progress:0,message:\"\",fileInfos:[]};return _this;}_createClass(UploadFiles,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;UploadService.getFiles().then(function(response){_this2.setState({fileInfos:response.data});});}},{key:\"selectFile\",value:function selectFile(event){this.setState({selectedFiles:event.target.files});}},{key:\"upload\",value:function upload(){var _this3=this;var currentFile=this.state.selectedFiles[0];this.setState({progress:0,currentFile:currentFile});UploadService.upload(currentFile,function(event){_this3.setState({progress:Math.round(100*event.loaded/event.total)});}).then(function(response){_this3.setState({message:response.data.message});return UploadService.getFiles();}).then(function(files){_this3.setState({fileInfos:files.data});}).catch(function(){_this3.setState({progress:0,message:\"Could not upload the file!\",currentFile:undefined});});this.setState({selectedFiles:undefined});}},{key:\"render\",value:function render(){var _this$state=this.state,selectedFiles=_this$state.selectedFiles,currentFile=_this$state.currentFile,progress=_this$state.progress,message=_this$state.message,fileInfos=_this$state.fileInfos;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",component:\"label\",children:[\"Upload File\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:this.selectFile,hidden:true,multiple:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:\"List of Files\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group list-group-flush\",children:fileInfos&&fileInfos.map(function(file,index){return/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item\",children:/*#__PURE__*/_jsx(\"a\",{href:file.url,children:file.name})},index);})})]})]});}}]);return UploadFiles;}(Component);export{UploadFiles as default};","map":{"version":3,"sources":["C:/Users/Lucas/Documents/Classes/Junior Year/Spring/Arcade-UI/src/main/frontend/src/components/upload-files.component.js"],"names":["React","Component","UploadService","UploadFiles","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","getFiles","then","response","setState","data","event","target","files","Math","round","loaded","total","catch","map","file","index","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UploadService from \"../services/upload-files.service\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n\r\n      fileInfos: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            component=\"label\"\r\n        >\r\n            Upload File\r\n            <input\r\n                type=\"file\"\r\n                onChange={this.selectFile}\r\n                hidden\r\n                multiple\r\n            />\r\n        </Button>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <li className=\"list-group-item\" key={index}>\r\n                  <a href={file.url}>{file.name}</a>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}